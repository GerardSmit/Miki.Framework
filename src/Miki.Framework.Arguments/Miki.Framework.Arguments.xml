<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Miki.Framework.Arguments</name>
    </assembly>
    <members>
        <member name="T:Miki.Framework.Arguments.ArgumentPack">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Framework.Arguments.ArgumentPack.CanTake">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Framework.Arguments.ArgumentPack.Cursor">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Framework.Arguments.ArgumentPack.Length">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Framework.Arguments.ArgumentPack.#ctor(System.String[])">
            <summary>
            Creates a new argument pack from an array.
            </summary>
        </member>
        <member name="M:Miki.Framework.Arguments.ArgumentPack.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new argument pack from an enumerable.
            </summary>
        </member>
        <member name="M:Miki.Framework.Arguments.ArgumentPack.Peek">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Framework.Arguments.ArgumentPack.Take">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Framework.Arguments.ArgumentPack.SetCursor(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Miki.Framework.Arguments.IArgumentPack">
            <summary>
            A validated queue pattern for split arguments.
            </summary>
        </member>
        <member name="P:Miki.Framework.Arguments.IArgumentPack.CanTake">
            <summary>
            Indicates whether the <see cref="P:Miki.Framework.Arguments.IArgumentPack.Cursor"/> position has exceeded the <see cref="P:Miki.Framework.Arguments.IArgumentPack.Length"/>
            or is in a valid index.
            </summary>
        </member>
        <member name="P:Miki.Framework.Arguments.IArgumentPack.Cursor">
            <summary>
            Current cursor index.
            </summary>
        </member>
        <member name="P:Miki.Framework.Arguments.IArgumentPack.Length">
            <summary>
            Total amount of arguments parsed.
            </summary>
        </member>
        <member name="M:Miki.Framework.Arguments.IArgumentPack.Peek">
            <summary>
            Peeks the current in the <see cref="P:Miki.Framework.Arguments.IArgumentPack.Cursor"/> first value without consuming the value.
            </summary>
            <returns>current first argument</returns>
        </member>
        <member name="M:Miki.Framework.Arguments.IArgumentPack.SetCursor(System.Int32)">
            <summary>
            Sets the cursor index.
            </summary>
        </member>
        <member name="M:Miki.Framework.Arguments.IArgumentPack.Take">
            <summary>
            Returns the value and increments the <see cref="P:Miki.Framework.Arguments.IArgumentPack.Cursor"/>.
            </summary>
            <returns>current first argument</returns>
        </member>
        <member name="P:Miki.Framework.Arguments.ITypedArgumentPack.CanTake">
            <summary>
            Check whether you're allowed to take at the moment.
            </summary>
        </member>
        <member name="M:Miki.Framework.Arguments.ITypedArgumentPack.Peek``1(``0@)">
            <summary>
            Returns the string without consuming the argument.
            </summary>
            <returns>current first argument</returns>
        </member>
        <member name="M:Miki.Framework.Arguments.ITypedArgumentPack.Take``1(``0@)">
            <summary>
            Returns and consumes the argument.
            </summary>
            <returns>current first argument</returns>
        </member>
        <member name="P:Miki.Framework.Arguments.Parsers.EnumArgumentParser.OutputType">
            <inheritdoc />
        </member>
        <member name="P:Miki.Framework.Arguments.Parsers.EnumArgumentParser.Priority">
            <inheritdoc />
        </member>
        <member name="M:Miki.Framework.Arguments.Parsers.EnumArgumentParser.CanParse(Miki.Framework.Arguments.IArgumentPack,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Miki.Framework.Arguments.Parsers.EnumArgumentParser.Parse(Miki.Framework.Arguments.IArgumentPack,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Miki.Framework.Arguments.Parsers.SuffixedIntArgumentParser.CanParse(Miki.Framework.Arguments.IArgumentPack,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Framework.Arguments.Parsers.SuffixedIntArgumentParser.Parse(Miki.Framework.Arguments.IArgumentPack,System.Type)">
            <inheritdoc/>
        </member>
    </members>
</doc>
